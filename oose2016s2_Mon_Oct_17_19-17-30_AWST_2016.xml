<?xml version="1.0" encoding="UTF-8"?>
<project name="oose2016s2" default="all">
  
  
  <property file="oose2016s2.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-doclet.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>
  
  
  <!-- Project Libraries -->
  
  <path id="library.gradle:_junit:junit:4.11.classpath">
    <pathelement location="${basedir}/../../../../../.gradle/caches/modules-2/files-2.1/junit/junit/4.11/4e031bb61df09069aeb2bffb4019e7a5034a4ee0/junit-4.11.jar"/>
  </path>
  
  <path id="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath">
    <pathelement location="${basedir}/../../../../../.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  
  <!-- Module OOSE2016s2 -->
  
  <dirname property="module.oose2016s2.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.oose2016s2" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.oose2016s2" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.oose2016s2" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.oose2016s2" value="-encoding UTF-8 -source 1.7 -target 1.7 ${compiler.args}"/>
  
  <property name="oose2016s2.output.dir" value="${module.oose2016s2.basedir}/out/production/OOSE2016s2"/>
  <property name="oose2016s2.testoutput.dir" value="${module.oose2016s2.basedir}/out/test/OOSE2016s2"/>
  
  <path id="oose2016s2.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="oose2016s2.module.production.classpath">
    <path refid="${module.jdk.classpath.oose2016s2}"/>
  </path>
  
  <path id="oose2016s2.runtime.production.module.classpath">
    <pathelement location="${oose2016s2.output.dir}"/>
  </path>
  
  <path id="oose2016s2.module.classpath">
    <path refid="${module.jdk.classpath.oose2016s2}"/>
    <pathelement location="${oose2016s2.output.dir}"/>
  </path>
  
  <path id="oose2016s2.runtime.module.classpath">
    <pathelement location="${oose2016s2.testoutput.dir}"/>
    <pathelement location="${oose2016s2.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.oose2016s2">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.oose2016s2">
    <patternset refid="excluded.from.module.oose2016s2"/>
  </patternset>
  
  
  <target name="compile.module.oose2016s2" depends="compile.module.oose2016s2.production,compile.module.oose2016s2.tests" description="Compile module OOSE2016s2"/>
  
  <target name="compile.module.oose2016s2.production" depends="register.custom.compilers" description="Compile module OOSE2016s2; production classes"/>
  
  <target name="compile.module.oose2016s2.tests" depends="register.custom.compilers,compile.module.oose2016s2.production" description="compile module OOSE2016s2; test classes" unless="skip.tests"/>
  
  <target name="clean.module.oose2016s2" description="cleanup module">
    <delete dir="${oose2016s2.output.dir}"/>
    <delete dir="${oose2016s2.testoutput.dir}"/>
  </target>
  
  
  <!-- Module OOSE2016s2_main -->
  
  <dirname property="module.oose2016s2_main.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.oose2016s2_main" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.oose2016s2_main" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.oose2016s2_main" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.oose2016s2_main" value="-encoding UTF-8 -source 1.5 -target 1.5 ${compiler.args}"/>
  
  <property name="oose2016s2_main.output.dir" value="${module.oose2016s2_main.basedir}/build/classes/main"/>
  <property name="oose2016s2_main.testoutput.dir" value="${module.oose2016s2_main.basedir}/build/classes/main"/>
  
  <path id="oose2016s2_main.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="oose2016s2_main.module.production.classpath">
    <path refid="${module.jdk.classpath.oose2016s2_main}"/>
  </path>
  
  <path id="oose2016s2_main.runtime.production.module.classpath">
    <pathelement location="${oose2016s2_main.output.dir}"/>
  </path>
  
  <path id="oose2016s2_main.module.classpath">
    <path refid="${module.jdk.classpath.oose2016s2_main}"/>
    <pathelement location="${oose2016s2_main.output.dir}"/>
  </path>
  
  <path id="oose2016s2_main.runtime.module.classpath">
    <pathelement location="${oose2016s2_main.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.oose2016s2_main">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.oose2016s2_main">
    <patternset refid="excluded.from.module.oose2016s2_main"/>
  </patternset>
  
  <path id="oose2016s2_main.module.sourcepath">
    <dirset dir="${module.oose2016s2_main.basedir}/src/main">
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.oose2016s2_main" depends="compile.module.oose2016s2_main.production,compile.module.oose2016s2_main.tests" description="Compile module OOSE2016s2_main"/>
  
  <target name="compile.module.oose2016s2_main.production" depends="register.custom.compilers" description="Compile module OOSE2016s2_main; production classes">
    <mkdir dir="${oose2016s2_main.output.dir}"/>
    <javac2 destdir="${oose2016s2_main.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.oose2016s2_main}/javac">
      <compilerarg line="${compiler.args.oose2016s2_main}"/>
      <bootclasspath refid="oose2016s2_main.module.bootclasspath"/>
      <classpath refid="oose2016s2_main.module.production.classpath"/>
      <src refid="oose2016s2_main.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.oose2016s2_main"/>
    </javac2>
    
    <copy todir="${oose2016s2_main.output.dir}">
      <fileset dir="${module.oose2016s2_main.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.oose2016s2_main.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.oose2016s2_main.tests" depends="register.custom.compilers,compile.module.oose2016s2_main.production" description="compile module OOSE2016s2_main; test classes" unless="skip.tests"/>
  
  <target name="clean.module.oose2016s2_main" description="cleanup module">
    <delete dir="${oose2016s2_main.output.dir}"/>
    <delete dir="${oose2016s2_main.testoutput.dir}"/>
  </target>
  
  
  <!-- Module OOSE2016s2_test -->
  
  <dirname property="module.oose2016s2_test.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.oose2016s2_test" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.oose2016s2_test" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.oose2016s2_test" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.oose2016s2_test" value="-encoding UTF-8 -source 1.5 -target 1.5 ${compiler.args}"/>
  
  <property name="oose2016s2_test.output.dir" value="undefined"/>
  <property name="oose2016s2_test.testoutput.dir" value="${module.oose2016s2_test.basedir}/build/classes/test"/>
  
  <path id="oose2016s2_test.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="oose2016s2_test.module.production.classpath">
    <path refid="${module.jdk.classpath.oose2016s2_test}"/>
    <pathelement location="${oose2016s2_main.output.dir}"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="oose2016s2_test.runtime.production.module.classpath">
    <path refid="oose2016s2_main.runtime.production.module.classpath"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="oose2016s2_test.module.classpath">
    <path refid="${module.jdk.classpath.oose2016s2_test}"/>
    <pathelement location="${oose2016s2_main.output.dir}"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  <path id="oose2016s2_test.runtime.module.classpath">
    <pathelement location="${oose2016s2_test.testoutput.dir}"/>
    <path refid="oose2016s2_main.runtime.module.classpath"/>
    <path refid="library.gradle:_junit:junit:4.11.classpath"/>
    <path refid="library.gradle:_org.hamcrest:hamcrest-core:1.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.oose2016s2_test">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.oose2016s2_test">
    <patternset refid="excluded.from.module.oose2016s2_test"/>
  </patternset>
  
  <path id="oose2016s2_test.module.test.sourcepath">
    <dirset dir="${module.oose2016s2_test.basedir}/src/test">
      <include name="java"/>
      <include name="resources"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.oose2016s2_test" depends="compile.module.oose2016s2_test.production,compile.module.oose2016s2_test.tests" description="Compile module OOSE2016s2_test"/>
  
  <target name="compile.module.oose2016s2_test.production" depends="register.custom.compilers,compile.module.oose2016s2_main" description="Compile module OOSE2016s2_test; production classes"/>
  
  <target name="compile.module.oose2016s2_test.tests" depends="register.custom.compilers,compile.module.oose2016s2_test.production" description="compile module OOSE2016s2_test; test classes" unless="skip.tests">
    <mkdir dir="${oose2016s2_test.testoutput.dir}"/>
    <javac2 destdir="${oose2016s2_test.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.oose2016s2_test}/javac">
      <compilerarg line="${compiler.args.oose2016s2_test}"/>
      <bootclasspath refid="oose2016s2_test.module.bootclasspath"/>
      <classpath refid="oose2016s2_test.module.classpath"/>
      <src refid="oose2016s2_test.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.oose2016s2_test"/>
    </javac2>
    
    <copy todir="${oose2016s2_test.testoutput.dir}">
      <fileset dir="${module.oose2016s2_test.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.oose2016s2_test.basedir}/src/test/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.oose2016s2_test" description="cleanup module">
    <delete dir="${oose2016s2_test.output.dir}"/>
    <delete dir="${oose2016s2_test.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.oose2016s2, clean.module.oose2016s2_main, clean.module.oose2016s2_test" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.oose2016s2, compile.module.oose2016s2_main, compile.module.oose2016s2_test" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>